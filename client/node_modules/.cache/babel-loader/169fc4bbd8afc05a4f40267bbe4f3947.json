{"ast":null,"code":"import _classCallCheck from\"/home/mihirpanchal/PROJECTS/book_store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mihirpanchal/PROJECTS/book_store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/mihirpanchal/PROJECTS/book_store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mihirpanchal/PROJECTS/book_store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import PaypalExpressBtn from'react-paypal-express-checkout';var PaypalButton=/*#__PURE__*/function(_React$Component){_inherits(PaypalButton,_React$Component);var _super=_createSuper(PaypalButton);function PaypalButton(){_classCallCheck(this,PaypalButton);return _super.apply(this,arguments);}_createClass(PaypalButton,[{key:\"render\",value:function render(){var _this=this;var onSuccess=function onSuccess(payment){// Congratulation, it came here means everything's fine!\nconsole.log(\"The payment was succeeded!\",payment);// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n_this.props.tranSuccess(payment);};var onCancel=function onCancel(data){// User pressed \"cancel\" or close Paypal's popup!\nconsole.log('The payment was cancelled!',data);// You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n};var onError=function onError(err){// The main Paypal's script cannot be loaded or somethings block the loading of that script!\nconsole.log(\"Error!\",err);// Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n// => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n};var env='sandbox';// you can set here to 'production' for production\nvar currency='USD';// or you can set this value from your props or state\nvar total=this.props.total;// same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n// Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\nvar client={sandbox:'YOUR-sandbox-APP-ID',production:'YOUR-PRODUCTION-APP-ID'};// In order to get production's app-ID, you will have to send your app to Paypal for approval first\n// For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n//   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n// For production app-ID:\n//   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n// NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\nvar style={size:'small',color:'blue',shape:'rect',label:'checkout',tagline:false};return/*#__PURE__*/React.createElement(PaypalExpressBtn,{env:env,client:client,currency:currency,total:total,onError:onError,onSuccess:onSuccess,onCancel:onCancel,style:style});}}]);return PaypalButton;}(React.Component);export{PaypalButton as default};","map":{"version":3,"sources":["/home/mihirpanchal/PROJECTS/book_store/client/src/components/mainpages/cart/PaypalButton.js"],"names":["React","PaypalExpressBtn","PaypalButton","onSuccess","payment","console","log","props","tranSuccess","onCancel","data","onError","err","env","currency","total","client","sandbox","production","style","size","color","shape","label","tagline","Component"],"mappings":"goBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,C,GAEqBC,CAAAA,Y,wRACR,gBACL,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,CAAa,CAC3B;AACEC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CF,OAA1C,EACM;AACA,KAAI,CAACG,KAAL,CAAWC,WAAX,CAAuBJ,OAAvB,EACX,CALD,CAOA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACvB;AACAL,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CI,IAA1C,EACA;AACH,CAJD,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,CAAS,CACrB;AACAP,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBM,GAAtB,EACA;AACA;AACH,CALD,CAOA,GAAIC,CAAAA,GAAG,CAAG,SAAV,CAAqB;AACrB,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CAAsB;AACtB,GAAIC,CAAAA,KAAK,CAAG,KAAKR,KAAL,CAAWQ,KAAvB,CAA8B;AAC9B;AAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAK,qBADD,CAEXC,UAAU,CAAE,wBAFD,CAAf,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAIC,CAAAA,KAAK,CAAG,CACRC,IAAI,CAAE,OADE,CAERC,KAAK,CAAE,MAFC,CAGRC,KAAK,CAAE,MAHC,CAIRC,KAAK,CAAE,UAJC,CAKRC,OAAO,CAAE,KALD,CAAZ,CAQA,mBACI,oBAAC,gBAAD,EACA,GAAG,CAAEX,GADL,CACU,MAAM,CAAEG,MADlB,CAEA,QAAQ,CAAEF,QAFV,CAGA,KAAK,CAAEC,KAHP,CAGc,OAAO,CAAEJ,OAHvB,CAIA,SAAS,CAAER,SAJX,CAIsB,QAAQ,CAAEM,QAJhC,CAKA,KAAK,CAAEU,KALP,EADJ,CAQH,C,0BAtDqCnB,KAAK,CAACyB,S,SAA3BvB,Y","sourcesContent":["import React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n \nexport default class PaypalButton extends React.Component {\n    render() {\n        const onSuccess = (payment) => {\n            // Congratulation, it came here means everything's fine!\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\n                    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n                    this.props.tranSuccess(payment)\n        }\n \n        const onCancel = (data) => {\n            // User pressed \"cancel\" or close Paypal's popup!\n            console.log('The payment was cancelled!', data);\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n        }\n \n        const onError = (err) => {\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n            console.log(\"Error!\", err);\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n        }\n \n        let env = 'sandbox'; // you can set here to 'production' for production\n        let currency = 'USD'; // or you can set this value from your props or state\n        let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n \n        const client = {\n            sandbox:    'YOUR-sandbox-APP-ID',\n            production: 'YOUR-PRODUCTION-APP-ID',\n        }\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n        // For production app-ID:\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n \n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n        let style = {\n            size: 'small',\n            color: 'blue',\n            shape: 'rect',\n            label: 'checkout',\n            tagline: false\n        }\n\n        return (\n            <PaypalExpressBtn \n            env={env} client={client} \n            currency={currency} \n            total={total} onError={onError} \n            onSuccess={onSuccess} onCancel={onCancel}\n            style={style} />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}